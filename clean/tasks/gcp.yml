---

- name: clean/gcp | clean vms
  block:
    - name: clean/gcp | Remove deletion protection
      command: "gcloud compute instances update {{item.name}} --no-deletion-protection --zone {{ item.regionzone }}"
      when: cluster_vars[buildenv].deletion_protection | bool
      with_items: "{{ hosts_to_clean }}"

    #- name: clean/gcp | Remove deletion protection (broken until https://github.com/ansible-collections/ansible_collections_google/pull/163 gets into a release)
    #  gcp_compute_instance:
    #    name: "{{item.name}}"
    #    project: "{{cluster_vars[buildenv].vpc_project_id}}"
    #    zone: "{{ item.regionzone }}"
    #    auth_kind: "serviceaccount"
    #    service_account_file: "{{gcp_credentials_file}}"
    #    deletion_protection: 'no'
    #  with_items: "{{ hosts_to_clean }}"

    - name: clean/gcp | Delete VMs
      gcp_compute_instance:
        name: "{{item.name}}"
        project: "{{cluster_vars[buildenv].vpc_project_id}}"
        zone: "{{ item.regionzone }}"
        auth_kind: "serviceaccount"
        service_account_file: "{{gcp_credentials_file}}"
        state: "absent"
      with_items: "{{ hosts_to_clean }}"
      register: r__gcp_compute_instance
      async: 7200
      poll: 0

    - name: clean/gcp | Wait for VM deletion to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: async_jobs
      until: async_jobs.finished
      retries: 300
      with_items: "{{r__gcp_compute_instance.results}}"
  when: hosts_to_clean | length


- name: clean/gcp | clean networking (when '-e clean=_all_')
  block:
    - name: clean/networking/gcp | Delete GCP cluster firewalls
      gcp_compute_firewall:
        name: "{{ item.name }}"
        state: "absent"
        auth_kind: "serviceaccount"
        service_account_file: "{{gcp_credentials_file}}"
        project: "{{cluster_vars[buildenv].vpc_host_project_id}}"
      with_items: "{{ cluster_vars.firewall_rules }}"

    - name: clean/gcp | Delete the GCP network (if -e delete_gcp_network=true)
      gcp_compute_network:
        name: "{{cluster_vars[buildenv].vpc_network_name}}"
        auth_kind: "serviceaccount"
        service_account_file: "{{gcp_credentials_file}}"
        project: "{{cluster_vars[buildenv].vpc_host_project_id}}"
        state: absent
      when: delete_gcp_network is defined and delete_gcp_network|bool
  when: clean is defined and clean == '_all_'
