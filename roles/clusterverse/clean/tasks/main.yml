---

- include_tasks: aws.yml
  when: cluster_vars.type == "aws"

- include_tasks: gce.yml
  when: cluster_vars.type == "gce"

- name: Delete DNS A records using nsupdate (if applicable)
  nsupdate:
    key_name: "{{bind9[buildenv].key_name}}"
    key_secret: "{{bind9[buildenv].key_secret}}"
    server: "{{bind9[buildenv].server}}"
    zone: "{{dns_tld_external}}"
    state: "absent"
    record: "{{item.hostname}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
  with_items: "{{ cluster_hosts_flat }}"
  when: cluster_vars.dns_server == "nsupdate" and cluster_vars.dns_zone_external is defined and cluster_vars.dns_zone_external != ""

- name: "Delete CNAME records"
  nsupdate:
    key_name: "{{bind9[buildenv].key_name}}"
    key_secret: "{{bind9[buildenv].key_secret}}"
    server: "{{bind9[buildenv].server}}"
    zone: "{{dns_tld_external}}"
    record: "{{item.hostname | regex_replace('-(?!.*-).*')}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
    value:  "{{item.hostname}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
    type: CNAME
    state: absent
  with_items: "{{ cluster_hosts_flat }}"
  when: cluster_vars.dns_server == "nsupdate" and (instance_to_create is undefined or rescuing_instance is undefined)
  delegate_to: localhost

- name: Delete DNS entries from route53
  block:
  - name: Get DNS entries from route53
    route53:
      aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
      aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
      state: "get"
      zone: "{{cluster_vars.dns_zone_external}}"
      record: "{{item.hostname}}.{{cluster_vars.dns_zone_external}}"
      type: "A"
      private_zone: true
    register: dns_rec
    with_items: "{{ cluster_hosts_flat }}"

  - name: Remove DNS entries from route53
    route53:
      aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
      aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
      state: "absent"
      zone: "{{ item.set.zone }}"
      record: "{{ item.set.record }}"
      type: "{{ item.set.type }}"
      ttl: "{{ item.set.ttl }}"
      value: ["{{ item.set.value }}"]
      private_zone: true
    with_items: "{{ dns_rec.results }}"
    when: item.set.value is defined

  - name: Get CNAME entries from route53
    route53:
      aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
      aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
      state: "get"
      zone: "{{cluster_vars.dns_zone_external}}"
      record: "{{item.hostname | regex_replace('-(?!.*-)[0-9]{10}$')}}.{{cluster_vars.dns_zone_external}}"
      type: "CNAME"
      private_zone: true
    register: dns_rec
    with_items: "{{ cluster_hosts_flat }}"

  - name: Remove DNS entries from route53
    route53:
      aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
      aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
      state: "absent"
      zone: "{{ item.set.zone }}"
      record: "{{ item.set.record }}"
      type: "{{ item.set.type }}"
      ttl: "{{ item.set.ttl }}"
      value: ["{{ item.set.value }}"]
      private_zone: true
    with_items: "{{ dns_rec.results }}"
    when: item.set.value is defined
  when: cluster_vars.dns_server == "route53" and cluster_vars.dns_zone_external is defined and cluster_vars.dns_zone_external != ""

- name: Delete the inventory file
  block:
    - stat: path={{inventory_file}}
      register: stat_inventory_file
      when: inventory_file is defined

    - set_fact:
        new_inventory_file: "{{ inventory_file if (((stat_inventory_file.stat is defined and stat_inventory_file.stat.exists) or (stat_inventory_file.skipped is defined and stat_inventory_file.skipped)) and inventory_dir is defined and inventory_dir==playbook_dir) else playbook_dir + '/inventory_' + cluster_name }}"

    # Check the inventory_dir==playbook_dir, because the default inventory is /etc/ansible/hosts
    - name: Delete the inventory file
      file:
        path: "{{new_inventory_file}}"
        state: absent

    - name: Refresh inventory
      meta: refresh_inventory
