---

- include_tasks: aws.yml
  when: cluster_vars[clusterid].type == "aws"

- include_tasks: openstack.yml
  when: cluster_vars[clusterid].type == "openstack"

- include_tasks: gce.yml
  when: cluster_vars[clusterid].type == "gce"

- include_tasks: vmware.yml
  when: cluster_vars[clusterid].type == "vmware"

#- debug: msg={{dynamic_inventory_flat}}
#- debug: msg={{dynamic_inventory_dict}}


- stat: path={{inventory_file}}
  register: stat_inventory_file
  when: inventory_file is defined

- set_fact:
    new_inventory_file: "{{ inventory_file if (((stat_inventory_file.stat is defined and stat_inventory_file.stat.exists) or (stat_inventory_file.skipped is defined and stat_inventory_file.skipped)) and inventory_dir is defined and inventory_dir==playbook_dir) else playbook_dir + '/inventory_' + cluster_name }}"

- name: Populate inventory file
  copy:
    content: |
      {% for key in dynamic_inventory_dict.keys() -%}
      [{{ key }}]
      {% for value in dynamic_inventory_dict[key] %}
      {{ value | json_query('hostname')}} ansible_host={{ value | json_query('inventory_ip')}} hosttype={{ key }}
      {% endfor %}

      {% endfor %}

      [{{ cluster_name }}:children]
      {% for key in dynamic_inventory_dict.keys() -%}
      {{ key }}
      {% endfor %}

    dest: "{{new_inventory_file}}"
    force: yes

- name: Add hosts to dynamic inventory
  add_host:
    name: "{{ item.hostname }}"
    groups: ["{{ item.hosttype }}","{{ cluster_name }}"]
    ansible_host: "{{ item.inventory_ip }}"
    hosttype: "{{ item.hosttype }}"
  with_items: "{{ dynamic_inventory_flat }}"


- name: Wait for port 22 to become open and contain "OpenSSH". (Do this instead of wait_for_connection, because wait_for_connection needs python2 installed remotely - not the case for Ubuntu)
  wait_for:
    port: 22
    host: "{{ item.inventory_ip }}"
    search_regex: OpenSSH
    delay: 1
  with_items: "{{ dynamic_inventory_flat }}"
  connection: local
