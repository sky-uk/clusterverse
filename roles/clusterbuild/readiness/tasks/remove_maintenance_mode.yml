---

- block:
    - name: remove_maintenance_mode | get ec2_instance_facts
      ec2_instance_facts:
        filters:
          "tag:Name": "{{item}}"
          "instance-state-name": ["running", "stopped"]
        aws_access_key: "{{ cluster_vars[buildenv].aws_access_key }}"
        aws_secret_key: "{{ cluster_vars[buildenv].aws_secret_key }}"
        region: "{{cluster_vars.region}}"
      delegate_to: localhost
      run_once: true
      register: ec2_instance_facts
      with_items: "{{ ansible_play_hosts }}"

    - set_fact:
        maint_mode_uids_to_clear: "{{ec2_instance_facts.results | json_query('[].instances[*].instance_id[]')}}"
      delegate_to: localhost
      run_once: true

    # - debug: msg={{maint_mode_uids_to_clear}}
    #   delegate_to: localhost
    #   run_once: true

    - name: remove_maintenance_mode | set maintenance_mode to false
      ec2_tag:
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{cluster_vars.region}}"
        resource: "{{ item }}"
        tags:
          maintenance_mode: "false"
      delegate_to: localhost
      run_once: true
      with_items: "{{ maint_mode_uids_to_clear }}"
  when: cluster_vars.type == "aws"

- block:
    - name: Get GCP instance facts
      gcp_compute_instance_facts:
        zone: "{{cluster_vars.region}}-{{item.az_name}}"
        filters:
          - "name = {{item.hostname}}*"
          - "status = RUNNING"
        project: "{{cluster_vars.project_id}}"
        auth_kind: "serviceaccount"
        service_account_file: "{{gcp_credentials_file}}"
        scopes: ["https://www.googleapis.com/auth/compute.readonly"]
      with_items: "{{cluster_hosts_flat}}"
      register: gcp_compute_instance_facts
      delegate_to: localhost

    - name: delete maintenance_mode label
      gce_labels:
        resource_name: "{{ item.hostname }}"
        resource_type: instances
        resource_location: "{{ cluster_vars.region }}-{{ item.az_name }}"
        project_id: "{{ cluster_vars.project_id }}"
        credentials_file: "{{ gcp_credentials_file }}"
        labels:
          maintenance_mode: "{{ maintenance_mode_tag }}"
        state: absent
      delegate_to: localhost
      run_once: true
      vars:
        maintenance_mode_tag: "{{gcp_compute_instance_facts.results | json_query('[].items[?name==`' + item.hostname + '`].labels.maintenance_mode | [] | [0]')}}"
      with_items: "{{cluster_hosts_flat}}"
      when: maintenance_mode_tag != ""

    - name: remove_maintenance_mode
      gce_labels:
        resource_name: "{{item.hostname}}"
        resource_type: instances
        resource_location: "{{cluster_vars.region}}-{{item.az_name}}"
        project_id: "{{cluster_vars.project_id}}"
        credentials_file: "{{gcp_credentials_file}}"
        labels:
          maintenance_mode: "false"
        state: present
      delegate_to: localhost
      run_once: true
      with_items: "{{cluster_hosts_flat}}"
  when: cluster_vars.type == "gce"
