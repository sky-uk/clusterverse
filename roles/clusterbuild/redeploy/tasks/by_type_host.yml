---

- debug: msg="Attempting to redeploy {{host_to_redeploy}}"

- include_tasks: gce-gather-instance-to-stop.yml
  when: cluster_vars.type == "gce"
  vars:
    host_to_stop: "{{host_to_redeploy}}"
    release_to_stop: "{{host_to_redeploy.current_release}}"
    deploy_status_to_stop: "old"     

- include_tasks: aws-gather-instance-to-stop.yml
  when: cluster_vars.type == "aws"
  vars:
    host_to_stop: "{{host_to_redeploy}}"
    release_to_stop: "{{host_to_redeploy.current_release}}"
    deploy_status_to_stop: "old"   

- name: "set argument variables for {{mainclusteryml}}"
  set_fact:
    maincluster_yml_args: "{{ (argv | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} -e instance_to_create={{instance_to_create}}"

- name: Attempt redeploy.  Restore old if fails
  block:
    - name: "run {{mainclusteryml}}"
      shell: "{{maincluster_yml_args}} -e rescuing=false"      
      register: r_mainclusteryml

    - debug: msg={{r_mainclusteryml}}

    - name: "Create CNAME record"
      nsupdate:
        key_name: "{{bind9[buildenv].key_name}}"
        key_secret: "{{bind9[buildenv].key_secret}}"
        server: "{{bind9[buildenv].server}}"
        zone: "{{dns_tld_external}}"
        record: "{{instance_to_create | regex_replace('-(?!.*-).*')}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
        value:  "{{instance_to_create}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
        type: CNAME
        state: present
        ttl: 30
      when: cluster_vars.dns_server == "nsupdate"

# ##### Uncomment the below to simulate redploy failure#######
# ############################################################
#    - fail:
#       msg: "Simulating deployment failure"
#      when: "'gdp-sandbox-gen-b0' in host_to_redeploy.hostname"

    - name: run pre-delete role
      include_role:
        name: "{{predeleterole}}"
      when: predeleterole is defined and predeleterole != ""    
        
    - include_tasks: aws_stop_instance.yml
      when: cluster_vars.type == "aws"
      vars:
        host_to_stop: "{{host_to_redeploy}}"
        release_to_stop: "{{host_to_redeploy.current_release}}"
        deploy_status_to_stop: "old"

    - include_tasks: gce_stop_instance.yml
      when: cluster_vars.type == "gce"
      vars:
        host_to_stop: "{{host_to_redeploy}}"
        release_to_stop: "{{host_to_redeploy.current_release}}"
        deploy_status_to_stop: "old"
