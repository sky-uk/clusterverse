---

- debug: msg="Attempting to redeploy {{host_to_redeploy}}"

- name: run pre-delete role
  include_role:
    name: "{{predeleterole}}"
  when: predeleterole is defined and predeleterole != ""

- include_tasks: gce.yml
  when: cluster_vars[clusterid].type == "gce"
  vars:
    host_to_stop: "{{host_to_redeploy}}"

- include_tasks: aws_stop_oldrelease.yml
  when: cluster_vars[clusterid].type == "aws"
  vars:
    host_to_stop: "{{host_to_redeploy}}"
    release_to_stop: "{{host_to_redeploy.current_release}}"
    deploy_status_to_stop: "old"   

- name: get argument variables
  get_argv:

- name: "set argument variables for {{mainclusteryml}}"
  set_fact:
    maincluster_yml_args: "{{ (argv | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} -e instance_to_create={{ existing | json_query('instances[0].tags.Name')}}"

- name: Attempt redploy.  Restore old if fails
  block:

    - name: "run {{mainclusteryml}}"
      shell: "{{maincluster_yml_args}} -e rescuing=false"      
      register: r_mainclusteryml

    - debug: msg={{r_mainclusteryml}}

    - include_tasks: aws_del.yml
      when: cluster_vars[clusterid].type == "aws"
      vars:
        host_to_del: "{{ host_to_redeploy }}"
        release_to_del: "{{host_to_redeploy.current_release}}"   

  rescue:
    - debug: msg="Restoring {{host_to_redeploy}}"

    - include_tasks: aws_stop_oldrelease.yml
      when: cluster_vars[clusterid].type == "aws"
      vars:
        host_to_stop: "{{host_to_redeploy}}"
        release_to_stop: "{{host_to_redeploy.release}}"
        deploy_status_to_stop: "new"
        
    #Uncomment to delete failed instances
    # - include_tasks: aws_del.yml
    #   when: cluster_vars[clusterid].type == "aws"
    #   vars:
    #     host_to_del: "{{ host_to_redeploy }}"
    #     release_to_del: "{{release_version}}"       

    - include_tasks: aws_rescue.yml
      when: cluster_vars[clusterid].type == "aws"
      vars:
        host_to_rescue: "{{host_to_redeploy}}"

    - name: "run {{mainclusteryml}} -e rescuing={{host_to_redeploy.current_release}}"
      shell: "{{maincluster_yml_args}} -e rescuing={{host_to_redeploy.current_release}}"
      vars:
        rescuing: "false"      
      register: r_mainclusteryml