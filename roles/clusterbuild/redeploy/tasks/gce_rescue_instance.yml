---

- debug: msg="Attempting to rollback {{host_to_rollback}}"

- name: Rescuing GCP instance
  gcp_compute_instance:
    name: "{{host_to_rollback}}"
    project: "{{cluster_vars.project_id}}"
    zone: "{{cluster_vars.region}}-{{host_to_rollback | regex_replace('.*-([a-z])[0-9]-.*', '\\1')}}"
    auth_kind: "serviceaccount"
    service_account_file: "{{gcp_credentials_file}}"
    status: "RUNNING"
  async: 7200
  poll: 0
  delegate_to: localhost
  register: gcp_compute_instance
     
- name: Wait for gce instance start to complete
  async_status:
    jid: "{{ gcp_compute_instance.ansible_job_id }}"
  register: gcp_jobs
  until: gcp_jobs.finished
  retries: 300
  delegate_to: localhost  

- name: "set argument variables for {{mainclusteryml}}"
  set_fact:
    maincluster_yml_args: "{{ (argv | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }}"

- name: Attempt redeploy
  block:
    - set_fact:
        j_rollback_arg: "[?starts_with(@, '{{host_to_rollback_clean|string}}')] | [0]"
      vars:
        host_to_rollback_clean: "{{host_to_rollback | regex_replace('-(?!.*-).*')}}"  

    - set_fact:
        host_to_redeploy: "{'hostname': \"{{rollback_instances | json_query('results[*].items[].name') | difference([host_to_rollback]) | to_json | from_json | json_query(j_rollback_arg)}}\"}"

    - name: "run {{mainclusteryml}}"
      shell: "{{maincluster_yml_args}} -e rescuing=true -e rescuing_instance={{ host_to_redeploy.hostname }}"      
      register: r_mainclusteryml

    - name: "Create CNAME record"
      nsupdate:
        key_name: "{{bind9[buildenv].key_name}}"
        key_secret: "{{bind9[buildenv].key_secret}}"
        server: "{{bind9[buildenv].server}}"
        zone: "{{dns_tld_external}}"
        record: "{{host_to_rollback | regex_replace('-(?!.*-).*')}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
        value:  "{{host_to_rollback}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
        type: CNAME
        state: present
        ttl: 30
      when: cluster_vars.dns_server == "nsupdate"

    - name: run pre-delete role
      include_role:
        name: "{{predeleterole}}"
      when: predeleterole is defined and predeleterole != ""    

    - include_tasks: gce_stop_instance.yml
      when: cluster_vars.type == "gce"
      vars:
        host_to_stop: "{{host_to_redeploy}}"
        deploy_status_to_stop: "new"        
