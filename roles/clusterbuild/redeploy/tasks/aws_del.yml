---

- name: Delete EC2 instance
  block:
    - name: get existing instance
      ec2_instance_facts:
        filters:
          "tag:cluster_name": "{{cluster_name}}"
          "instance-state-name": ["stopped"]
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{cluster_vars.region}}"
      register: existing
      delegate_to: localhost
      run_once: true

    - name: Remove EC2 instance termination protection
      ec2:
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{ cluster_vars.region }}"
        state: "stopped"
        termination_protection: "no"
        instance_ids: ["{{ item }}"]
      with_items: "{{ existing | json_query('instances[].instance_id')}}"
      delegate_to: localhost
      run_once: true

    - name: set maintenance_mode to true
      ec2_tag:
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{cluster_vars.region}}"
        resource: "{{ item }}"
        tags:
          maintenance_mode: "true"
      delegate_to: localhost
      run_once: true
      with_items: "{{ existing | json_query('instances[].instance_id')}}"

    - name: Delete EC2 instance
      ec2:
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{ cluster_vars.region }}"
        state: "absent"
        instance_ids: ["{{ item }}"]
        wait: true
      with_items: "{{ existing | json_query('instances[].instance_id')}}"
      delegate_to: localhost
      run_once: true