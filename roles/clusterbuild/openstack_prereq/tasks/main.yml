---

## OLD METHOD - works on cmdline
#- name: Get zone id
#  become: false
#  shell: openstack zone list -f json -c name -c id
#  delegate_to: localhost
#  run_once: true
#  changed_when: false
#  register: zone_list
#
#- name: Set zone id fact
#  set_fact:
#    os_zone_id: "{{ zone_list.stdout | from_json | json_query(queryvar) }}"
#  vars:
#    queryvar: "[?name=='{{dns_tld_external}}.'].id|[0]"
#  run_once: true

- name: Get Openstack DNS stuff
  block:
    - name: "Get Openstack Zone {{dns_tld_external}}"
      os_zone_facts:
        auth_type: password
        auth:
          auth_url: "{{cluster_vars[clusterid].OS_AUTH_URL}}"
          tenant_id: "{{cluster_vars[clusterid].OS_TENANT_ID}}"
          tenant_name: "{{cluster_vars[clusterid].OS_TENANT_NAME}}"
          project_name: "{{cluster_vars[clusterid].OS_PROJECT_NAME}}"
          username: "{{os_username}}"
          password: "{{os_password}}"
        name: "{{dns_tld_external}}."
      delegate_to: localhost
      run_once: true
      register: _r_zone

#    - debug: msg={{_r_zone}}

    - name: Set zone id fact
      set_fact:
        os_zone_id: "{{ _r_zone.zone.id }}"

    - name: Get all dns
      become: false
      delegate_to: localhost
      run_once: true
      shell: openstack recordset list -f json --type A -c name -c id -c records {{os_zone_id}}
      changed_when: false
      register: recordset_list

    - name: Set all dns fact
      set_fact:
        os_all_dns: "{{ recordset_list.stdout | from_json }}"
  when: cluster_vars[clusterid].type == "openstack" and cluster_vars[clusterid].dns_server == "openstack" and cluster_vars[clusterid].dns_zone_external is defined and cluster_vars[clusterid].dns_zone_external != ""

## Obfuscates output to be 'safe' - v. irritating
#- name: "Get Openstack Recordsets for Zone {{dns_tld_external}}"
#  os_recordset_facts:
#    auth_type: password
#    auth:
#      auth_url: "{{cluster_vars[clusterid].OS_AUTH_URL}}"
#      tenant_id: "{{cluster_vars[clusterid].OS_TENANT_ID}}"
#      tenant_name: "{{cluster_vars[clusterid].OS_TENANT_NAME}}"
#      project_name: "{{cluster_vars[clusterid].OS_PROJECT_NAME}}"
#      username: "{{os_username}}"
#      password: "{{os_password}}"
#    zone_id: "{{os_zone_id}}"
#  delegate_to: localhost
#  run_once: true
#  register: _r_recordsets
#
#- debug: msg={{_r_recordsets}}
#
#- name: Set all dns fact
#  set_fact:
#    os_all_dns: "{{ recordset_list.recordsets }}"
