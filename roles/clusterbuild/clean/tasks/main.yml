---

- include_tasks: openstack.yml
  when: cluster_vars[clusterid].type == "openstack"

- include_tasks: gce.yml
  when: cluster_vars[clusterid].type == "gce"

- include_tasks: aws.yml
  when: cluster_vars[clusterid].type == "aws"

- name: Delete DNS entries from infoblox
  infoblox:
    server: "{{ infoblox.server }}"
    username: "{{ infoblox.username }}"
    password: "{{ infoblox.password }}"
    action: delete_a_record
    name: "{{ item.fqdn }}"
  with_items: "{{ cluster_hosts_flat }}"
  when: cluster_vars[clusterid].dns_server == "infoblox" and cluster_vars[clusterid].dns_tld_external is defined and cluster_vars[clusterid].dns_tld_external != ""

## Can't use this unless we use the same creation (which doesn't work properly)
#- name: Delete DNS entries from infoblox
#  nios_host_record:
#    name: "{{ item.fqdn }}"
#    state: absent
#    provider:
#      host: "{{ infoblox.server }}"
#      username: "{{ infoblox.username }}"
#      password: "{{ infoblox.password }}"


- name: empty the inventory file
  block:
    - stat: path={{inventory_file}}
      register: stat_inventory_file
      when: inventory_file is defined

    - set_fact:
        new_inventory_file: "{{ inventory_file if (((stat_inventory_file.stat is defined and stat_inventory_file.stat.exists) or (stat_inventory_file.skipped is defined and stat_inventory_file.skipped)) and inventory_dir is defined and inventory_dir==playbook_dir) else playbook_dir + '/inventory_' + cluster_name }}"

    # Check the inventory_dir==playbook_dir, because the default inventory is /etc/ansible/hosts
    - name: Create (empty) inventory file
      copy:
        content: ""
        dest: "{{new_inventory_file}}"
        force: yes

    - name: Refresh inventory
      meta: refresh_inventory
