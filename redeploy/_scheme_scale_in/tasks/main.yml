---

- name: Skip this play if we're running canary=tidy
  block:
    - debug: msg="canary=tidy is not valid for this redeploy scheme"
    - meta: end_play
  when: "canary == 'tidy'"

- name: Preflight check
  block:
    - assert: { that: "non_current_hosts | length == 0", msg: "ERROR - All VMs must be in the 'current' lifecycle_state.  Those not [{{non_current_hosts | join(',')}}]"  }
      vars:
        non_current_hosts: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state!='current'].name\") }}"
      when: canary=="start" or canary=="none"

    - assert: { that: "{{chs_hosts | difference(cht_hosts) | length>0}}", fail_msg: "Cannot use this scheme to redeploy to same size cluster; [{{ chs_hosts | join(',') }}] = [{{ cht_hosts | join(',') }}]" }
      vars:
        cht_hosts: "{{ cluster_hosts_target | json_query(\"[].hostname\") | map('regex_replace', '-(?!.*-).*') | list }}"
        chs_hosts: "{{ cluster_hosts_state | json_query(\"[].name\") | map('regex_replace', '-(?!.*-).*') | list }}"

- name: Set hosts_to_del - Diff cluster_hosts_state vs cluster_hosts_target
  set_fact: hosts_to_del={{chs_hosts | difference(cht_hosts)}}
  vars:
    cht_hosts: "{{ cluster_hosts_target | json_query(\"[].hostname\") | list }}"
    chs_hosts: "{{ cluster_hosts_state | json_query(\"[].name\") | list }}"

- name: Run predelete role per host. Delete one at a time.
  include_tasks: by_host.yml
  with_items: "{{ hosts_to_del }}"
  loop_control:
    loop_var: host_to_del
