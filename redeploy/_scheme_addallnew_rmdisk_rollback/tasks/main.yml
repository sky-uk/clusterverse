---

- name: Preflight check
  block:
    - assert: { that: "non_current_hosts | length == 0", msg: "ERROR - All VMs must be in the 'current' lifecycle_state.  Those not [{{non_current_hosts | join(',')}}]"  }
      vars:
        non_current_hosts: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state!='current'].name\") }}"
      when: canary=="start" or canary=="none"


- name: Redeploy by replacing entire cluster; rollback on fail
  block:
    - name: redeploy
      include_tasks: redeploy.yml
  rescue:
    - name: rescue
      include_tasks: rescue.yml

    - name: rescue | end_play
      meta: end_play
  when: canary!="tidy"


- name: Tidy up non-current instances
  block:
    - assert: { that: "'current' in (cluster_hosts_state | map(attribute='tagslabels.lifecycle_state'))", msg: "ERROR - Cannot tidy when there are no machines in the 'current' lifecycle_state." }

    - import_role:
        name: clusterverse/clean
        tasks_from: clean_dns.yml
      when: (cluster_vars.dns_server is defined and cluster_vars.dns_server != "") and (cluster_vars.dns_zone_external is defined and cluster_vars.dns_zone_external != "")

    - import_role:
        name: clusterverse/clean
        tasks_from: clean_vms.yml
  vars:
    hosts_to_clean: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state!='current']\") }}"
  when: canary=="tidy" or  ((canary=="none" or canary=="finish") and canary_tidy_on_success is defined and canary_tidy_on_success|bool)
