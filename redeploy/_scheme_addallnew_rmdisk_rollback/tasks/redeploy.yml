---

- name: canary==start or canary==none
  block:
    - assert: { that: "non_current_hosts | length == 0", msg: "ERROR - There must be no machines not in the 'current' lifecycle_state.  [non_current_hosts | join(',')]"  }
      vars:
        non_current_hosts: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state!='current']\") }}"

    - name: Change lifecycle_state label from 'current' to 'retiring'
      include_role:
        name: clusterverse/redeploy/__common
        tasks_from: set_lifecycle_state_label.yml
      vars:
        hosts_to_relabel: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state=='current']\") }}"
        new_state: "retiring"

    - name: "Run {{mainclusteryml}} to provision new cluster (and skip readiness (e.g. DNS CNAMES))"
      shell: "{{ (argv | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} --skip-tags=clusterverse_readiness"
      register: r__mainclusteryml

    - fail:
      when: testfail is defined and testfail == "fail_1"

    - debug: msg={{r__mainclusteryml.stderr_lines + r__mainclusteryml.stdout_lines}}
      when: r__mainclusteryml.failed
  when: canary=="start" or canary=="none"

- name: re-acquire cluster_hosts_flat and cluster_hosts_state
  import_role:
    name: clusterverse/cluster_hosts
  when: canary=="none"

- name: canary==finish or canary==none
  block:
    - assert: { that: "'retiring' in (cluster_hosts_state | map(attribute='tagslabels.lifecycle_state'))", msg: "ERROR - There are no machines in the 'retiring' state." }

    - name: "Run {{mainclusteryml}} to perform readiness steps on new cluster (maintenance_mode, CNAME)"
      shell: "{{ (argv | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} --tags=clusterverse_dynamic_inventory,clusterverse_readiness"
      register: r__mainclusteryml

    - name: run predeleterole role
      include_role:
        name: "{{predeleterole}}"
      vars:
        hosts_to_remove: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state=='retiring']\") }}"
      when: predeleterole is defined and predeleterole != ""

    - fail:
      when: testfail is defined and testfail == "fail_2"

    - debug: msg={{r__mainclusteryml.stderr_lines + r__mainclusteryml.stdout_lines}}
      when: r__mainclusteryml.failed

    - name: Power off old VMs
      include_role:
        name: clusterverse/redeploy/__common
        tasks_from: poweroff_vms.yml
      vars:
        hosts_to_stop: "{{ cluster_hosts_state | json_query(\"[?tagslabels.lifecycle_state=='retiring']\") }}"

    - debug: msg={{r__mainclusteryml.stderr_lines + r__mainclusteryml.stdout_lines}}
      when: r__mainclusteryml.failed
  when: canary=="finish" or canary=="none"
