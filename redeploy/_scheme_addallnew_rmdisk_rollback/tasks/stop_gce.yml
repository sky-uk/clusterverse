---

- name: Stop GCE VMs
  block:
    - name: Get existing GCP instance info (per AZ)
      gcp_compute_instance_info:
        zone: "{{cluster_vars.region}}-{{item}}"
        filters:
          - "labels.cluster_name = {{cluster_name}}"
        project: "{{cluster_vars.project_id}}"
        auth_kind: "serviceaccount"
        service_account_file: "{{gcp_credentials_file}}"
        scopes: ["https://www.googleapis.com/auth/compute.readonly"]
      with_items: "{{ cluster_vars[buildenv].hosttype_vars | json_query(\"*[vms_by_az][][keys(@)][][]\") | unique }}"
      register: r__gcp_compute_instance_info
      delegate_to: localhost
      run_once: true

    - name: Stop GCE VMs
      gcp_compute_instance:
        name: "{{item.name}}"
        project: "{{cluster_vars.project_id}}"
        zone: "{{item.zone | regex_replace('^.*/(.*)$', '\\1')}}"
        auth_kind: "serviceaccount"
        service_account_file: "{{gcp_credentials_file}}"
        deletion_protection: "{{cluster_vars[buildenv].deletion_protection}}"
        status: "TERMINATED"
        labels: "{{ item.labels }}"
      with_items: "{{r_gcp_compute_instance_info.results | json_query(\"[].resources[?contains(`\" + hosts_to_stop | join(',') + \"`, name)][]\")}}"
      register: r__gcp_compute_instance
      async: 7200
      poll: 0

    - name: Wait for gce instance stopping to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: async_jobs
      until: async_jobs.finished
      retries: 300
      with_items: "{{r__gcp_compute_instance.results}}"
