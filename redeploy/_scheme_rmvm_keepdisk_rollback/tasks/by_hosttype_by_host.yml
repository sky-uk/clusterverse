---

- debug: msg="by_hosttype_by_host | Attempting to redeploy {{host_to_redeploy.hostname}}"

- name: stop/ remove previous instance
  block:
    - name: by_hosttype_by_host | run predeleterole role
      include_role:
        name: "{{predeleterole}}"
      vars:
        hosts_to_remove: "{{ hosts_to_stop }}"
      when: predeleterole is defined and predeleterole != ""

    - name: by_hosttype_by_host | Power off old VM
      include_role:
        name: clusterverse/redeploy/__common
        tasks_from: poweroff_vms.yml
  vars:
    _host_to_redeploy_nosuffix: "{{host_to_redeploy.hostname | regex_replace('-(?!.*-).*')}}"   #Remove the cluster_suffix from the hostname
    hosts_to_stop: "{{ cluster_hosts_state | to_json | from_json | json_query(\"[?tagslabels.lifecycle_state!='current' && starts_with(name, '\" + _host_to_redeploy_nosuffix + \"')]\") }}"

- name: "by_hosttype_by_host | Run {{mainclusteryml}} to add {{host_to_redeploy.hostname}} to cluster"
  shell: "{{ (argv | join(' ')) | regex_replace('redeploy.yml', mainclusteryml) }} -e cluster_suffix={{cluster_suffix}} -e '{'cluster_hosts_target': [{{host_to_redeploy | to_json}}]}'"
  register: r__mainclusteryml
  no_log: True
  ignore_errors: yes
- debug: msg="{{[r__mainclusteryml.stdout_lines] + [r__mainclusteryml.stderr_lines]}}"
  failed_when: r__mainclusteryml is failed
  when: r__mainclusteryml is failed  or  (debug_nested_log_output is defined and debug_nested_log_output|bool)

- name: by_hosttype_by_host | re-acquire cluster_hosts_state (NOT cluster_hosts_target, as we are augmenting this in _add_src_diskinfo_to_cluster_hosts_target__ (also, it is not affected by change of state))
  import_role:
    name: clusterverse/cluster_hosts
    tasks_from: get_cluster_hosts_state.yml

- name: by_hosttype_by_host | Power on new VM (not needed for normal redeploy, but for rescue case)
  include_role:
    name: clusterverse/redeploy/__common
    tasks_from: poweron_vms.yml
  vars:
    hosts_to_start: "{{ cluster_hosts_state | selectattr('name', '==', host_to_redeploy.hostname) | list }}"

- name: by_hosttype_by_host | re-acquire the dynamic inventory
  include_role:
    name: clusterverse/dynamic_inventory

- name: by_hosttype_by_host | re-acquire cluster_hosts_state (NOT cluster_hosts_target, as we are augmenting this in _add_src_diskinfo_to_cluster_hosts_target__ (also, it is not affected by change of state))
  import_role:
    name: clusterverse/cluster_hosts
    tasks_from: get_cluster_hosts_state.yml
