---

- debug: msg="Stop {{host_to_del.hostname}}"

- name:
  block:
    - name: get existing instance
      ec2_instance_facts:
        filters:
          "tag:Name": "{{ host_to_del.hostname }}"
          "instance-state-name": ["running", "stopped"]
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{cluster_vars.region}}"
      register: ec2_instance_facts
      delegate_to: localhost
      run_once: true

    - name: Delete DNS A records using nsupdate (if applicable)
      nsupdate:
        key_name: "{{bind9[buildenv].key_name}}"
        key_secret: "{{bind9[buildenv].key_secret}}"
        server: "{{bind9[buildenv].server}}"
        zone: "{{dns_tld_external}}"
        state: "absent"
        record: "{{ec2_instance_facts.instances[0].tags.Name}}.{{cluster_vars.dns_zone_external | regex_replace('^(.*?)\\.' + dns_tld_external, '\\1')}}"
      when: cluster_vars.dns_server == "nsupdate" and cluster_vars.dns_zone_external is defined and cluster_vars.dns_zone_external != ""

    - name: Delete DNS entries from route53
      block:
        - name: Get DNS entries from route53
          route53:
            aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
            aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
            state: "get"
            zone: "{{cluster_vars.dns_zone_external}}"
            record: "{{ec2_instance_facts.instances[0].tags.Name}}.{{cluster_vars.dns_zone_external}}"
            type: "A"
            private_zone: "{{cluster_vars.route53_private_zone | default(true)}}"
          register: dns_rec

        - name: Remove DNS entries from route53
          route53:
            aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
            aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
            state: "absent"
            zone: "{{ dns_rec.set.zone }}"
            record: "{{ dns_rec.set.record }}"
            type: "{{ dns_rec.set.type }}"
            ttl: "{{ dns_rec.set.ttl }}"
            value: ["{{ dns_rec.set.value }}"]
            private_zone: "{{cluster_vars.route53_private_zone | default(true)}}"
          when: dns_rec.set.value is defined
      when: cluster_vars.dns_server == "route53" and cluster_vars.dns_zone_external is defined and cluster_vars.dns_zone_external != ""

    - name: aws_del | Delete EC2 instance
      ec2:
        aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
        aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
        region: "{{ cluster_vars.region }}"
        state: "absent"
        instance_ids: ["{{ ec2_instance_facts.instances[0].instance_id }}"]
        wait: true
      when: (ec2_instance_facts.instances is defined) and (ec2_instance_facts.instances | length>0) and (ec2_instance_facts.instances[0].instance_id is defined)
      delegate_to: localhost
      run_once: true
