---

- name: poweron_vms | hosts_to_start
  debug: msg="{{hosts_to_start}}"

- block:
    - name: poweron_vms | Power-on AWS EC2 VM(s)
      block:
        - name: poweron_vms | Power-on AWS EC2 VM(s)
          ec2:
            aws_access_key: "{{cluster_vars[buildenv].aws_access_key}}"
            aws_secret_key: "{{cluster_vars[buildenv].aws_secret_key}}"
            region: "{{ cluster_vars.region }}"
            state: "running"
            instance_ids: "{{ hosts_to_start | json_query(\"[].instance_id\") }}"
            wait: true
          delegate_to: localhost
          run_once: true
      when: cluster_vars.type == "aws"


    - name: poweron_vms | Power-on GCP GCE VM(s) asynchronously
      block:
        - name: poweron_vms | Power-on GCP GCE VM(s)
          gcp_compute_instance:
            name: "{{item.name}}"
            project: "{{cluster_vars.project_id}}"
            zone: "{{ item.regionzone }}"
            auth_kind: "serviceaccount"
            service_account_file: "{{gcp_credentials_file}}"
            deletion_protection: "{{cluster_vars[buildenv].deletion_protection}}"
            status: "RUNNING"
            labels: "{{ item.tagslabels }}"
          with_items: "{{ hosts_to_start }}"
          register: r__gcp_compute_instance
          async: 7200
          poll: 0

        - name: poweron_vms | Wait for GCP GCE instance(s) to power-on
          async_status:
            jid: "{{ item.ansible_job_id }}"
          register: async_jobs
          until: async_jobs.finished
          retries: 300
          with_items: "{{r__gcp_compute_instance.results}}"
      when: cluster_vars.type == "gcp"
  when: hosts_to_start | length