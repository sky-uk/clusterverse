---

- name: cloud_agents | Qualys cloud agent
  block:
    - name: cloud_agents | Retrieve Qualys agents from github
      uri:
        url: "{{ cloud_agent.qualys.github_release }}/latest"
        force_basic_auth: yes
        url_username: "{{ environment_credentials[buildenv].github_username }}"
        url_password: "{{ environment_credentials[buildenv].github_token }}"
        headers:
          Accept: "application/vnd.github.v3+json"
      register: github_latest_qualys

    # - name: cloud_agents | Get latest Qualys agent
    #   uri:
    #     url: "{{ github_latest_qualys | json_query('json[].assets[?name==`'+ cloud_agent.qualys.bin_name +'`].url[] | [0]') }}"
    #     follow_redirects: none
    #     status_code: 302
    #     return_content: no
    #     force_basic_auth: yes
    #     url_username: "{{ environment_credentials[buildenv].github_username }}"
    #     url_password: "{{ environment_credentials[buildenv].github_token }}"
    #     headers:
    #       Accept: "application/octet-stream"
    #   register: qualys_release_file

    - name: cloud_agents | Download Qualys agents to tmp directory
      get_url:
        url: "{{ qualys_release_file.location }}"
        dest: "/tmp/{{ cloud_agent.qualys.bin_name }}"
        mode: 0755
        force: true

    - name: cloud_agents | Remove existing Qualys cloud agent pkg Debian
      become: yes
      apt:
        name: "{{ cloud_agent.qualys.service }}"
        state: absent
      when: ansible_os_family == 'Debian'

    - name: cloud_agents | Download and install Qualys cloud agent pkg Debian
      become: yes
      apt:
        deb: "/tmp/{{ cloud_agent.qualys.bin_name }}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: cloud_agents | Remove existing Qualys cloud agent pkg RedHat
      become: yes
      yum:
        name: "{{ cloud_agent.qualys.service }}"
        state: absent
      when: ansible_os_family == 'RedHat'

    - name: cloud_agents | Download and install Qualys cloud agent pkg RedHat
      become: yes
      yum:
        name: "{{ cloud_agent.qualys.rpmpackage }}"
        state: present
      when: ansible_os_family == 'RedHat'

    - name: cloud_agents | link Qualys cloud agent
      become: yes
      shell: "{{ cloud_agent.qualys.bin_path }}/qualys-cloud-agent.sh ActivationId={{ cloud_agent.qualys.activation_id }} CustomerId={{ cloud_agent.qualys.customer_id }}"

    - name: cloud_agents | configure proxy for the Qualys cloud agent
      become: yes
      lineinfile:
        path: '{{  cloud_agent.qualys.config_path }}'
        regexp: '^qualys_https_proxy='
        line: 'qualys_https_proxy=https://{{ cloud_agent.qualys.proxy.host }}:{{ cloud_agent.qualys.proxy.port }}'
        state: present
        create: yes
        owner: root
        group: root
        mode: '0600'
      when: "'proxy' in cloud_agent.qualys"

    - name: cloud_agents | enable and start Qualys service
      become: yes
      service:
        name: '{{ cloud_agent.qualys.service }}'
        state: started
        enabled: yes
  when: "'qualys' in cloud_agent"

- name: cloud_agents | Tenable Nessus cloud agent
  block:
    - name: cloud_agents | Retrieve Tenable Nessus agents from github
      uri:
        url: "{{ cloud_agent.tenable.github_release }}"
        force_basic_auth: yes
        url_username: "{{ environment_credentials[buildenv].github_username }}"
        url_password: "{{ environment_credentials[buildenv].github_token }}"
        headers:
          Accept: "application/vnd.github.v3+json"
      register: github_list_tenable

    - name: cloud_agents | Get latest Tenable Nessus agent
      uri:
        url: "{{ github_list_tenable | json_query('json[].assets[?name==`'+ cloud_agent.tenable.debpackage +'`].url[] | [0]') }}"
        follow_redirects: none
        status_code: 302
        return_content: no
        force_basic_auth: yes
        url_username: "{{ environment_credentials[buildenv].github_username }}"
        url_password: "{{ environment_credentials[buildenv].github_token }}"
        headers:
          Accept: "application/octet-stream"
      register: tenable_release_file

    - name: cloud_agents | Download Tenable Nessus agents to tmp directory
      get_url:
        url: "{{ tenable_release_file.location }}"
        dest: "/tmp/{{ cloud_agent.tenable.debpackage }}"
        mode: 0755
        force: true

    - name: cloud_agents | Remove existing Tenable Nessus cloud agent pkg Debian
      become: yes
      apt:
        name: "{{ cloud_agent.tenable.service }}"
        state: absent
      when: ansible_os_family == 'Debian'

    - name: cloud_agents | Download and install Tenable Nessus cloud agent pkg Debian
      become: yes
      apt:
        deb: "/tmp/{{ cloud_agent.tenable.debpackage }}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: cloud_agents | Remove existing Tenable Nessus cloud agent pkg RedHat
      become: yes
      yum:
        name: "{{ cloud_agent.tenable.service }}"
        state: absent
      when: ansible_os_family == 'RedHat'

    - name: cloud_agents | Download and install Tenable Nessus cloud agent pkg RedHat
      become: yes
      yum:
        name: "{{ cloud_agent.tenable.rpmpackage }}"
        state: present
      when: ansible_os_family == 'RedHat'
      
    - name: cloud_agents | link Tenable Nessus cloud agent (with proxy if applicable)
      become: yes
      shell: "{{ cloud_agent.tenable.bin_path }}/nessuscli agent link --key={{ cloud_agent.tenable.nessus_key_id }} --groups={{ cloud_agent.tenable.nessus_group_id }} --cloud {%- if 'proxy' in cloud_agent.tenable -%} --proxy-host={{ cloud_agent.tenable.proxy.host }} --proxy-port={{ cloud_agent.tenable.proxy.port }} {%- endif -%}"
      when: "'proxy' in cloud_agent.tenable"

    - name: cloud_agents | enable and start Tenable Nessus service
      become: yes
      service:
        name: '{{ cloud_agent.tenable.service }}'
        state: started
        enabled: yes
  when: "'tenable' in cloud_agent"
