---

- name: cloud_agents | Qualys cloud agent
  block:
    - name: cloud_agents | Remove existing Qualys cloud agent pkg Debian
      become: yes
      apt:
        name: "{{ cloud_agent.qualys.service }}"
        state: absent
      when: ansible_os_family == 'Debian'

    - name: cloud_agents | Download and install Qualys cloud agent pkg Debian
      become: yes
      apt:
        deb: "{{ cloud_agent.qualys.debpackage }}"
        state: present
      when: ansible_os_family == 'Debian'
    
    - name: cloud_agents | Remove existing Qualys cloud agent pkg RedHat
      become: yes
      yum:
        name: "{{ cloud_agent.qualys.service }}"
        state: absent
      when: ansible_os_family == 'RedHat'

    - name: cloud_agents | Download and install Qualys cloud agent pkg RedHat
      become: yes
      yum:
        name: "{{ cloud_agent.qualys.rpmpackage }}"
        state: present
      when: ansible_os_family == 'RedHat'

    - name: cloud_agents | link Qualys cloud agent
      become: yes
      shell: "{{ cloud_agent.qualys.bin_path }}/qualys-cloud-agent.sh ActivationId={{ cloud_agent.qualys.activation_id }} CustomerId={{ cloud_agent.qualys.customer_id }}"

    - name: cloud_agents | configure proxy for the Qualys cloud agent
      become: yes
      lineinfile:
        path: '{{  cloud_agent.qualys.config_path }}'
        regexp: '^qualys_https_proxy='
        line: 'qualys_https_proxy=https://{{ cloud_agent.qualys.proxy.host }}:{{ cloud_agent.qualys.proxy.port }}'
        state: present
        create: yes
        owner: root
        group: root
        mode: '0600'
      when: "'proxy' in cloud_agent.qualys"

    - name: cloud_agents | enable and start Qualys service
      become: yes
      service:
        name: '{{ cloud_agent.qualys.service }}'
        state: started
        enabled: yes
  when: "'qualys' in cloud_agent"

- name: cloud_agents | Tenable Nessus cloud agent
  block:
    - name: cloud_agents | Download and install Tenable Nessus cloud agent pkg
      become: yes
      apt:
        deb: "{{ cloud_agent.tenable.debpackage }}"
        state: present

    - name: cloud_agents | link Tenable Nessus cloud agent (with proxy if applicable)
      shell: "{{ cloud_agent.tenable.bin_path }}/nessuscli agent link --key={{ tenable_cloud_agent.nessus_key_id }} --groups={{ tenable_cloud_agent.nessus_group_id }} --cloud {%- if 'proxy' in cloud_agent.tenable -%} --proxy-host={{ tenable_cloud_agent.proxy.host }} --proxy-port={{ tenable_cloud_agent.proxy.port }} {%- endif -%}"
      when: "'proxy' in cloud_agent.tenable"

    - name: cloud_agents | enable and start Tenable Nessus service
      become: yes
      service:
        name: '{{ cloud_agent.tenable.service }}'
        state: started
        enabled: yes
  when: "'tenable' in cloud_agent"