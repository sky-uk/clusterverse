---

- name: disks_auto_generic | Get the block device information (pre-filesystem create)
  blockdevmap:
    cloud_type: "lsblk"
  become: yes
  register: r__blockdevmap

- name: disks_auto_generic | r__blockdevmap
  debug: msg={{ r__blockdevmap }}

- name: disks_auto_generic | Create 'hostvols' fact that contains a list of available host devices (lsblk) mapped to the mountpoints defined in cluster_vars.  Allow for multiple disks with same size.
  set_fact:
    hostvols: |
      {% set res = [] -%}
      {% set tmp_blkvols = r__blockdevmap.device_map | selectattr('TYPE', '==', 'disk') | selectattr('MOUNTPOINT', '==', '') | list -%}
      {% set inventory_hostname__no_suffix = inventory_hostname | regex_replace('-(?!.*-).*') -%}
      {%- for autovol in cluster_hosts_target | to_json | from_json | json_query('[?starts_with(hostname, \'' + inventory_hostname__no_suffix + '\')].auto_volumes[]') -%}
        {%- set blkvolloop = namespace(break=false) -%}
        {%- for blkvol in tmp_blkvols if not blkvolloop.break -%}
          {%- if (autovol.volume_size*1073741824|int) == (blkvol['SIZE']|int) -%}
            {%- set _ = res.extend([ {'device': blkvol['device_name_os'], 'mountpoint': autovol.mountpoint, 'fstype': autovol.fstype, 'perms': autovol.perms | default({})}]) -%}
            {%- set blkvolloop.break = true -%}
            {%- set _ = tmp_blkvols.remove(blkvol) -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endfor -%}
      {{ res }}

- name: disks_auto_generic | hostvols
  debug: msg={{hostvols}}

# Create partition-less filesystems.
- name: disks_auto_generic | Create filesystem(s) on attached volume(s)
  become: yes
  filesystem:
    fstype: "{{ item.fstype }}"
    dev: "{{ item.device }}"
    force: no
  with_items: "{{ hostvols }}"
  register: created_filesystem
  retries: 5
  delay: 1
  until: created_filesystem is not failed

- name: disks_auto_generic | Mount created filesytem(s) persistently
  become: yes
  mount:
    path: "{{ item.mountpoint }}"
    src: "{{ item.device }}"
    fstype: "{{ item.fstype }}"
    state: mounted
    opts: _netdev
  with_items: "{{ hostvols }}"

- name: disks_auto_generic | change ownership of mountpoint (if set)
  become: yes
  file:
    path: "{{ item.mountpoint }}"
    state: directory
    mode: "{{ item.perms.mode | default(omit)}}"
    owner: "{{ item.perms.owner | default(omit)}}"
    group: "{{ item.perms.group | default(omit)}}"
  with_items: "{{ hostvols }}"
