---

# Create an array of dictionaries containing all the hostnames PER-AZ (i.e. couchbase-dev-node-a0, couchbase-dev-master-a1, couchbase-dev-master-b0, couchbase-dev-master-b1 etc) to be created:
- name: get_cluster_hosts_target | Create cluster_hosts_target from the cluster definition in cluster_vars
  set_fact:
    cluster_hosts_target: |
      {% set res = [] -%}
      {%- for hostttype in cluster_vars[buildenv].hosttype_vars.keys() -%}
        {%- for azname in cluster_vars[buildenv].hosttype_vars[hostttype].vms_by_az.keys() -%}
          {%- for azcount in range(0,cluster_vars[buildenv].hosttype_vars[hostttype].vms_by_az[azname]|int) -%}
            {% set _dummy = res.extend([{
              'hosttype': hostttype,
              'hostname': cluster_name + '-' + hostttype + '-' + azname|string + azcount|string + '-' + cluster_suffix|string,
              'az_name': azname|string,
              'flavor': cluster_vars[buildenv].hosttype_vars[hostttype].flavor,
              'auto_volumes': cluster_vars[buildenv].hosttype_vars[hostttype].auto_volumes
              }]) -%}
          {%- endfor %}
        {%- endfor %}
      {%- endfor %}
      {{ res }}


- name: get_cluster_hosts_target | Augment with cloud-specific parameters (if necessary)
  include: "{{ item }}"
  loop: "{{ query('first_found', params) }}"
  vars: { params: { files: ["get_cluster_hosts_target_{{cluster_vars.type}}.yml"], skip: true } }


- name: get_cluster_hosts_target | cluster_hosts_target
  debug: msg={{cluster_hosts_target}}
  delegate_to: localhost
  run_once: true
