---

- name: Get the cluster suffix for the currently running cluster VMs (if any)
  include_tasks: get_cluster_hosts_state.yml

- name: Set cluster suffix to suffix of current live VMs
  set_fact:
    cluster_suffix: "{{cluster_suffix_current}}"
  when: cluster_suffix_current is defined and cluster_suffix_current != ""

- name: Create new cluster suffix, unless already set (e.g. it will be overridden by -e on command line)
  set_fact:
    cluster_suffix: "{{ansible_date_time.epoch}}"
  when: cluster_suffix_current is not defined or cluster_suffix_current == ""

- debug: msg="cluster_suffix = {{cluster_suffix}}"


# Create an array of dictionaries containing all the hostnames PER-AZ (i.e. couchbase-dev-node-a0, couchbase-dev-master-a1, couchbase-dev-master-b0, couchbase-dev-master-b1 etc) to be created:
- set_fact:
    cluster_hosts_flat: |
      {% set res = [] -%}
      {%- for hostttype in cluster_vars[buildenv].hosttype_vars.keys() -%}
        {%- for azname in cluster_vars[buildenv].hosttype_vars[hostttype].vms_by_az.keys() -%}
          {%- for azcount in range(0,cluster_vars[buildenv].hosttype_vars[hostttype].vms_by_az[azname]|int) -%}
            {% set _dummy = res.extend([{
              'hosttype': hostttype,
              'hostname': cluster_name + '-' + hostttype + '-' + azname + azcount|string + '-' + cluster_suffix|string,
              'az_name': azname|string,
              'flavor': cluster_vars[buildenv].hosttype_vars[hostttype].flavor,
              'release': release_version
              }]) -%}
          {%- endfor %}
        {%- endfor %}
      {%- endfor %}
      {{ res }}

- include_tasks: aws.yml
  when: cluster_vars.type == "aws"

- include_tasks: gce.yml
  when: cluster_vars.type == "gce"

- debug: msg={{cluster_hosts_flat}}
