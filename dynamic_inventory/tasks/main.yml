---

- name: dynamic_inventory | Derive dynamic inventory for AWS cluster
  include_tasks: aws.yml
  when: cluster_vars.type == "aws"

- name: dynamic_inventory | Derive dynamic inventory for GCE cluster
  include_tasks: gce.yml
  when: cluster_vars.type == "gce"

- assert: { that: "dynamic_inventory_flat is defined", msg: "dynamic_inventory_flat is not defined" }

- name: dynamic_inventory | dynamic_inventory_flat
  debug: msg="{{ dynamic_inventory_flat }}"

- name: dynamic_inventory | Wait for SSH connectivity
  wait_for_connection:
    timeout: 180
  delegate_to: "{{ item.inventory_ip }}"
  with_items: "{{ dynamic_inventory_flat }}"

- name: dynamic_inventory | Add hosts to dynamic inventory
  add_host:
    name: "{{ item.tagslabels.Name }}"
    groups: "{{ [cluster_name,clusterid] + _hosttype }}"
    ansible_host: "{{ item.inventory_ip }}"
    hosttype: "{{ _hosttype }}"
    az_name: "{{ item.tagslabels.az_name }}"
    additional_services: "{{ item.tagslabels.additional_services| default('') }}"
  with_items: "{{ dynamic_inventory_flat }}"
  vars:
    _hosttype: "{{ [item.tagslabels.hosttype] + _additional_services }}"
    _additional_services: "{{ item.tagslabels.additional_services.split(',') if 'additional_services' in item.tagslabels.keys() else [] }}"

- name: dynamic_inventory | stat the inventory_file path
  stat: path={{ inventory_file }}
  register: stat_inventory_file
  when: inventory_file is defined

- name: dynamic_inventory | Populate inventory file from dynamic inventory
  copy:
    content: |
      {% for groupname in groups.keys() -%}
      {% if groupname not in ["all", "ungrouped"] -%}
      [{{ groupname }}]
      {% for hostname in groups[groupname] %}
      {{ hostname }} ansible_host={{hostvars[hostname].ansible_host}} hosttype={{ hostvars[hostname].hosttype|join(',') }} az_name={{ hostvars[hostname].az_name }}
      {% endfor %}

      {% endif %}
      {% endfor %}
    dest: "{{new_inventory_file}}"
    force: yes
  vars:
    new_inventory_file: "{{ inventory_file if (((stat_inventory_file.stat is defined and stat_inventory_file.stat.exists) or (stat_inventory_file.skipped is defined and stat_inventory_file.skipped)) and inventory_dir is defined and inventory_dir==playbook_dir) else playbook_dir + '/inventory_' + cluster_name }}"

