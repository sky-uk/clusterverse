---

- include_tasks: aws.yml
  when: cluster_vars.type == "aws"

- include_tasks: gce.yml
  when: cluster_vars.type == "gce"


- assert: { that: "dynamic_inventory_flat is defined", msg: "dynamic_inventory_flat is not defined" }

- debug: msg="{{dynamic_inventory_flat}}"

# The following is using ping (instead of wait_for to check for port 22) to actually establish SSH connectivity with the destination host,
# this is particularly useful if using a jumphost to access the destination host, and the ansible-running-machine doesn't have direct
- name: Wait for SSH connectivity
  ping:
  delegate_to: "{{ item.inventory_ip }}"
  with_items: "{{ dynamic_inventory_flat }}"
  retries: 120

- name: Add hosts to dynamic inventory
  add_host:
    name: "{{ item.hostname }}"
    groups: ["{{ item.hosttype }}","{{ cluster_name }}","{{ clusterid }}"]
    ansible_private_host: "{%- if cluster_vars.inventory_ip == 'public' and cluster_vars.inventory_ip !='' -%} {{ item.private_ip }} {%- endif -%}" 
    ansible_host: "{{ item.inventory_ip }}"
    hosttype: "{{ item.hosttype }}"
  with_items: "{{ dynamic_inventory_flat }}"

- stat: path={{inventory_file}}
  register: stat_inventory_file
  when: inventory_file is defined

- set_fact:
    new_inventory_file: "{{ inventory_file if (((stat_inventory_file.stat is defined and stat_inventory_file.stat.exists) or (stat_inventory_file.skipped is defined and stat_inventory_file.skipped)) and inventory_dir is defined and inventory_dir==playbook_dir) else playbook_dir + '/inventory_' + cluster_name }}"

- name: Populate inventory file from dynamic inventory
  copy:
    content: |
      {% for groupname in groups.keys() -%}
      {% if groupname not in ["all", "ungrouped"] -%}
      [{{ groupname }}]
      {% for hostname in groups[groupname] %}
      {{ hostname }} ansible_host={{hostvars[hostname].ansible_host}} hosttype={{ hostvars[hostname].hosttype }} ansible_private_host={{ hostvars[hostname].ansible_private_host }}
      {% endfor %}

      {% endif %}
      {% endfor %}
    dest: "{{new_inventory_file}}"
    force: yes
